apiVersion: v1
kind: Namespace
metadata:
  name: app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-dep
  namespace: app
spec:
  selector:
    matchLabels:
      app: hello-world
  replicas: 3
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-world
        image: ghcr.io/kenta-ja8/hello-world:{{ .Values.image.tag }}
        ports:
        - containerPort: 80
        env:
        - name: POSTGRES_HOST
          value: postgres-svc.app.svc.cluster.local
        - name: POSTGRES_DB
          value: maindb
        - name: POSTGRES_USER
          value: mainuser
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-sealedsecret
              key: POSTGRES_PASSWORD
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world2-dep
  namespace: app
spec:
  selector:
    matchLabels:
      app: hello-world2
  replicas: 2
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: hello-world2
    spec:
      containers:
      - name: hello-world2
        image: ghcr.io/kenta-ja8/hello-world:{{ .Values.image.tag2 }}
        ports:
        - containerPort: 80
        env:
        - name: POSTGRES_HOST
          value: postgres-svc.app.svc.cluster.local
        - name: POSTGRES_DB
          value: maindb
        - name: POSTGRES_USER
          value: mainuser
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-sealedsecret
              key: POSTGRES_PASSWORD
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgdata-pvc
  namespace: app
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "maindb"
        - name: POSTGRES_USER
          value: "mainuser"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-sealedsecret
              key: POSTGRES_PASSWORD
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
          subPath: pgdata
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: pgdata-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: app
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: postgres
  type: ClusterIP
